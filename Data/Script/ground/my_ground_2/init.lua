--[[
    init.lua
    Created: 08/08/2022 14:13:38
    Description: Autogenerated script file for the map my_ground_2.
]]--
-- Commonly included lua functions and data
require 'common'

-- Package name
local my_ground_2 = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = MapStrings['SomeStringName']
local MapStrings = {}

-------------------------------
-- Map Callbacks
-------------------------------
---my_ground_2.Init
--Engine callback function
function my_ground_2.Init(map)

  --This will fill the localized strings table automatically based on the locale the game is 
  -- currently in. You can use the MapStrings table after this line!
  MapStrings = COMMON.AutoLoadLocalizedStrings()
  COMMON.RespawnAllies()
  GAME:UnlockDungeon('faded_trail')
  GAME:UnlockDungeon('debug_zone')
  GAME:UnlockDungeon('rev_zone')

end

---my_ground_2.Enter
--Engine callback function
function my_ground_2.Enter(map)

  GAME:FadeIn(20)

end

---my_ground_2.Exit
--Engine callback function
function my_ground_2.Exit(map)


end

---my_ground_2.Update
--Engine callback function
function my_ground_2.Update(map)


end

---my_ground_2.GameSave
--Engine callback function
function my_ground_2.GameSave(map)


end

---my_ground_2.GameLoad
--Engine callback function
function my_ground_2.GameLoad(map)

  GAME:FadeIn(20)

end

function my_ground_2.Sign_Action(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  UI:ResetSpeaker()
  UI:SetAutoFinish(true)
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['SignText']))
  UI:SetAutoFinish(false)
end

function my_ground_2.Assembly_Action(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  UI:ResetSpeaker()
  COMMON.ShowTeamAssemblyMenu(obj, COMMON.RespawnAllies)
end

function my_ground_2.Storage_Action(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  COMMON:ShowTeamStorageMenu()
end

function my_ground_2.NPC_Reptile_Action_Temp()
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine

  local chara = CH('NPC_Reptile')
  local player = CH('PLAYER')

  --Make the npc face the player
  GROUND:CharTurnToChar(chara, player)
  UI:SetSpeaker(chara)
  UI:SetSpeakerEmotion("Happy")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['WelcomeText']))

  local quest = SV.my_ground_2.Missions["OutlawQuest"]
  if quest == nil then
    SV.my_ground_2.Missions["OutlawQuest"] = { Complete = COMMON.MISSION_INCOMPLETE, Type = COMMON.MISSION_TYPE_OUTLAW, DestZone = "faded_trail", DestSegment = "0", DestFloor = "3", TargetSpecies = "riolu" }
  end
end


function my_ground_2.NPC_Reptile_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  PrintInfo('Volbeat_Action')
  GROUND:CharTurnToCharAnimated(chara, CH('PLAYER'), 4)

  UI:SetSpeaker(chara)
  -- check for quest presence
  local quest = SV.test_grounds.Missions["MyQuest"]
  if quest == nil then
    -- no caterpie quest? ask to start one
    UI:ChoiceMenuYesNo("No Volmise mission detected. Do you want to start one?")
    UI:WaitForChoice()
    local chres = UI:ChoiceResult()
    if chres then
	  -- Type 1 = Escort
	  --SV.test_grounds.Missions["MyQuest"] = { Complete = COMMON.MISSION_INCOMPLETE, Type = COMMON.MISSION_TYPE_OUTLAW, DestZone = "rev_zone", DestSegment = "0", DestFloor = "3", TargetSpecies = "riolu" }
	  --SV.test_grounds.Missions["VolmiseQuest"] = { Complete = COMMON.MISSION_INCOMPLETE, Type = COMMON.MISSION_TYPE_ESCORT, DestZone = "rev_zone", DestSegment = 0, DestFloor = 2, TargetSpecies = "illumise", EscortSpecies = "volbeat" }
	  --SV.test_grounds.Missions["MyQuest"] = { Complete = COMMON.MISSION_INCOMPLETE, Type = COMMON.MISSION_TYPE_ESCORT, DestZone = "rev_zone", DestSegment = 0, DestFloor = 3, TargetSpecies = "mudkip", EscortSpecies = "absol" }
	  SV.test_grounds.Missions["MyQuest"] = { Complete = COMMON.MISSION_INCOMPLETE, Type = COMMON.MISSION_TYPE_OUTLAW, DestZone = "rev_zone", DestSegment = 0, DestFloor = 3, TargetSpecies = "absol" }
      UI:WaitShowDialogue("You can find Illumise at Replay Test Zone 4F.  I'll join you when you enter!")
    end
  else
    if quest.Complete == 2 then
	  -- there is a caterpie quest, and it has been completed- thank you note
	  UI:WaitShowDialogue("Volmise mission state: Rewarded.  Thank you for rescuing Illumise!")
	elseif quest.Complete == 1 then
	  UI:WaitShowDialogue("Volmise mission state: Complete.  Give a reward and mark mission as rewarded.")
	  quest.Complete = 2
	else
	  -- there is a caterpie quest, but it hasn't been completed?  ask to abandon
      UI:ChoiceMenuYesNo("Volmise mission state: Incomplete.  Do you want to abandon the mission?")
      UI:WaitForChoice()
      local chres = UI:ChoiceResult()
      if chres then
	    SV.test_grounds.Missions["MyQuest"] = nil
        UI:WaitShowDialogue("Volmise mission removed.")
      end
	end
  end
end

function my_ground_2.North_Exit_Touch(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  local dungeon_entrances = { 'rev_zone', 'my_zone', 'faded_trail', 'debug_zone'}
  local ground_entrances = {{Flag=true, Zone='rev_zone',ID=0,Entry=0}}
  COMMON.ShowDestinationMenu(dungeon_entrances,ground_entrances)
end

function my_ground_2.Teammate1_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  COMMON.GroundInteract(activator, chara, true)
end

function my_ground_2.Teammate2_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  COMMON.GroundInteract(activator, chara, true)
end

function my_ground_2.Teammate3_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  COMMON.GroundInteract(activator, chara, true)
end

-------------------------------
-- Entities Callbacks
-------------------------------


return my_ground_2

